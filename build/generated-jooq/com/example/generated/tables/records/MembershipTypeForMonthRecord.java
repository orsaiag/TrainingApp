/*
 * This file is generated by jOOQ.
 */
package com.example.generated.tables.records;


import com.example.generated.tables.MembershipTypeForMonth;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record3;
import org.jooq.Row3;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class MembershipTypeForMonthRecord extends UpdatableRecordImpl<MembershipTypeForMonthRecord> implements Record3<String, Long, Long> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.membership_type_for_month.name</code>.
     */
    public void setName(String value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.membership_type_for_month.name</code>.
     */
    public String getName() {
        return (String) get(0);
    }

    /**
     * Setter for <code>public.membership_type_for_month.price</code>.
     */
    public void setPrice(Long value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.membership_type_for_month.price</code>.
     */
    public Long getPrice() {
        return (Long) get(1);
    }

    /**
     * Setter for <code>public.membership_type_for_month.id</code>.
     */
    public void setId(Long value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.membership_type_for_month.id</code>.
     */
    public Long getId() {
        return (Long) get(2);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record3 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row3<String, Long, Long> fieldsRow() {
        return (Row3) super.fieldsRow();
    }

    @Override
    public Row3<String, Long, Long> valuesRow() {
        return (Row3) super.valuesRow();
    }

    @Override
    public Field<String> field1() {
        return MembershipTypeForMonth.MEMBERSHIP_TYPE_FOR_MONTH.NAME;
    }

    @Override
    public Field<Long> field2() {
        return MembershipTypeForMonth.MEMBERSHIP_TYPE_FOR_MONTH.PRICE;
    }

    @Override
    public Field<Long> field3() {
        return MembershipTypeForMonth.MEMBERSHIP_TYPE_FOR_MONTH.ID;
    }

    @Override
    public String component1() {
        return getName();
    }

    @Override
    public Long component2() {
        return getPrice();
    }

    @Override
    public Long component3() {
        return getId();
    }

    @Override
    public String value1() {
        return getName();
    }

    @Override
    public Long value2() {
        return getPrice();
    }

    @Override
    public Long value3() {
        return getId();
    }

    @Override
    public MembershipTypeForMonthRecord value1(String value) {
        setName(value);
        return this;
    }

    @Override
    public MembershipTypeForMonthRecord value2(Long value) {
        setPrice(value);
        return this;
    }

    @Override
    public MembershipTypeForMonthRecord value3(Long value) {
        setId(value);
        return this;
    }

    @Override
    public MembershipTypeForMonthRecord values(String value1, Long value2, Long value3) {
        value1(value1);
        value2(value2);
        value3(value3);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached MembershipTypeForMonthRecord
     */
    public MembershipTypeForMonthRecord() {
        super(MembershipTypeForMonth.MEMBERSHIP_TYPE_FOR_MONTH);
    }

    /**
     * Create a detached, initialised MembershipTypeForMonthRecord
     */
    public MembershipTypeForMonthRecord(String name, Long price, Long id) {
        super(MembershipTypeForMonth.MEMBERSHIP_TYPE_FOR_MONTH);

        setName(name);
        setPrice(price);
        setId(id);
    }

    /**
     * Create a detached, initialised MembershipTypeForMonthRecord
     */
    public MembershipTypeForMonthRecord(com.example.generated.tables.pojos.MembershipTypeForMonth value) {
        super(MembershipTypeForMonth.MEMBERSHIP_TYPE_FOR_MONTH);

        if (value != null) {
            setName(value.getName());
            setPrice(value.getPrice());
            setId(value.getId());
        }
    }
}
