/*
 * This file is generated by jOOQ.
 */
package com.example.generated.tables.daos;


import com.example.generated.tables.MembershipTypeForMonth;
import com.example.generated.tables.records.MembershipTypeForMonthRecord;

import java.util.List;
import java.util.Optional;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class MembershipTypeForMonthDao extends DAOImpl<MembershipTypeForMonthRecord, com.example.generated.tables.pojos.MembershipTypeForMonth, Long> {

    /**
     * Create a new MembershipTypeForMonthDao without any configuration
     */
    public MembershipTypeForMonthDao() {
        super(MembershipTypeForMonth.MEMBERSHIP_TYPE_FOR_MONTH, com.example.generated.tables.pojos.MembershipTypeForMonth.class);
    }

    /**
     * Create a new MembershipTypeForMonthDao with an attached configuration
     */
    public MembershipTypeForMonthDao(Configuration configuration) {
        super(MembershipTypeForMonth.MEMBERSHIP_TYPE_FOR_MONTH, com.example.generated.tables.pojos.MembershipTypeForMonth.class, configuration);
    }

    @Override
    public Long getId(com.example.generated.tables.pojos.MembershipTypeForMonth object) {
        return object.getId();
    }

    /**
     * Fetch records that have <code>name BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.example.generated.tables.pojos.MembershipTypeForMonth> fetchRangeOfName(String lowerInclusive, String upperInclusive) {
        return fetchRange(MembershipTypeForMonth.MEMBERSHIP_TYPE_FOR_MONTH.NAME, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>name IN (values)</code>
     */
    public List<com.example.generated.tables.pojos.MembershipTypeForMonth> fetchByName(String... values) {
        return fetch(MembershipTypeForMonth.MEMBERSHIP_TYPE_FOR_MONTH.NAME, values);
    }

    /**
     * Fetch records that have <code>price BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.example.generated.tables.pojos.MembershipTypeForMonth> fetchRangeOfPrice(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(MembershipTypeForMonth.MEMBERSHIP_TYPE_FOR_MONTH.PRICE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>price IN (values)</code>
     */
    public List<com.example.generated.tables.pojos.MembershipTypeForMonth> fetchByPrice(Long... values) {
        return fetch(MembershipTypeForMonth.MEMBERSHIP_TYPE_FOR_MONTH.PRICE, values);
    }

    /**
     * Fetch records that have <code>id BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.example.generated.tables.pojos.MembershipTypeForMonth> fetchRangeOfId(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(MembershipTypeForMonth.MEMBERSHIP_TYPE_FOR_MONTH.ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>id IN (values)</code>
     */
    public List<com.example.generated.tables.pojos.MembershipTypeForMonth> fetchById(Long... values) {
        return fetch(MembershipTypeForMonth.MEMBERSHIP_TYPE_FOR_MONTH.ID, values);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public com.example.generated.tables.pojos.MembershipTypeForMonth fetchOneById(Long value) {
        return fetchOne(MembershipTypeForMonth.MEMBERSHIP_TYPE_FOR_MONTH.ID, value);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public Optional<com.example.generated.tables.pojos.MembershipTypeForMonth> fetchOptionalById(Long value) {
        return fetchOptional(MembershipTypeForMonth.MEMBERSHIP_TYPE_FOR_MONTH.ID, value);
    }
}
