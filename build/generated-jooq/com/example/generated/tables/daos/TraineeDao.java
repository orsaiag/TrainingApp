/*
 * This file is generated by jOOQ.
 */
package com.example.generated.tables.daos;


import com.example.generated.tables.Trainee;
import com.example.generated.tables.records.TraineeRecord;

import java.util.List;

import org.jooq.Configuration;
import org.jooq.Record2;
import org.jooq.impl.DAOImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TraineeDao extends DAOImpl<TraineeRecord, com.example.generated.tables.pojos.Trainee, Record2<Long, String>> {

    /**
     * Create a new TraineeDao without any configuration
     */
    public TraineeDao() {
        super(Trainee.TRAINEE, com.example.generated.tables.pojos.Trainee.class);
    }

    /**
     * Create a new TraineeDao with an attached configuration
     */
    public TraineeDao(Configuration configuration) {
        super(Trainee.TRAINEE, com.example.generated.tables.pojos.Trainee.class, configuration);
    }

    @Override
    public Record2<Long, String> getId(com.example.generated.tables.pojos.Trainee object) {
        return compositeKeyRecord(object.getId(), object.getPhone());
    }

    /**
     * Fetch records that have <code>name BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.example.generated.tables.pojos.Trainee> fetchRangeOfName(String lowerInclusive, String upperInclusive) {
        return fetchRange(Trainee.TRAINEE.NAME, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>name IN (values)</code>
     */
    public List<com.example.generated.tables.pojos.Trainee> fetchByName(String... values) {
        return fetch(Trainee.TRAINEE.NAME, values);
    }

    /**
     * Fetch records that have <code>id BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.example.generated.tables.pojos.Trainee> fetchRangeOfId(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(Trainee.TRAINEE.ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>id IN (values)</code>
     */
    public List<com.example.generated.tables.pojos.Trainee> fetchById(Long... values) {
        return fetch(Trainee.TRAINEE.ID, values);
    }

    /**
     * Fetch records that have <code>phone BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.example.generated.tables.pojos.Trainee> fetchRangeOfPhone(String lowerInclusive, String upperInclusive) {
        return fetchRange(Trainee.TRAINEE.PHONE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>phone IN (values)</code>
     */
    public List<com.example.generated.tables.pojos.Trainee> fetchByPhone(String... values) {
        return fetch(Trainee.TRAINEE.PHONE, values);
    }

    /**
     * Fetch records that have <code>payment_method BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.example.generated.tables.pojos.Trainee> fetchRangeOfPaymentMethod(String lowerInclusive, String upperInclusive) {
        return fetchRange(Trainee.TRAINEE.PAYMENT_METHOD, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>payment_method IN (values)</code>
     */
    public List<com.example.generated.tables.pojos.Trainee> fetchByPaymentMethod(String... values) {
        return fetch(Trainee.TRAINEE.PAYMENT_METHOD, values);
    }

    /**
     * Fetch records that have <code>note BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.example.generated.tables.pojos.Trainee> fetchRangeOfNote(String lowerInclusive, String upperInclusive) {
        return fetchRange(Trainee.TRAINEE.NOTE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>note IN (values)</code>
     */
    public List<com.example.generated.tables.pojos.Trainee> fetchByNote(String... values) {
        return fetch(Trainee.TRAINEE.NOTE, values);
    }

    /**
     * Fetch records that have <code>membership BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.example.generated.tables.pojos.Trainee> fetchRangeOfMembership(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(Trainee.TRAINEE.MEMBERSHIP, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>membership IN (values)</code>
     */
    public List<com.example.generated.tables.pojos.Trainee> fetchByMembership(Long... values) {
        return fetch(Trainee.TRAINEE.MEMBERSHIP, values);
    }
}
