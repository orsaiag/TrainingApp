/*
 * This file is generated by jOOQ.
 */
package com.example.generated.tables.daos;


import com.example.generated.tables.Training;
import com.example.generated.tables.records.TrainingRecord;

import java.time.LocalDateTime;
import java.util.List;

import org.jooq.Configuration;
import org.jooq.Record2;
import org.jooq.impl.DAOImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TrainingDao extends DAOImpl<TrainingRecord, com.example.generated.tables.pojos.Training, Record2<Long, String>> {

    /**
     * Create a new TrainingDao without any configuration
     */
    public TrainingDao() {
        super(Training.TRAINING, com.example.generated.tables.pojos.Training.class);
    }

    /**
     * Create a new TrainingDao with an attached configuration
     */
    public TrainingDao(Configuration configuration) {
        super(Training.TRAINING, com.example.generated.tables.pojos.Training.class, configuration);
    }

    @Override
    public Record2<Long, String> getId(com.example.generated.tables.pojos.Training object) {
        return compositeKeyRecord(object.getId(), object.getType());
    }

    /**
     * Fetch records that have <code>id BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.example.generated.tables.pojos.Training> fetchRangeOfId(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(Training.TRAINING.ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>id IN (values)</code>
     */
    public List<com.example.generated.tables.pojos.Training> fetchById(Long... values) {
        return fetch(Training.TRAINING.ID, values);
    }

    /**
     * Fetch records that have <code>type BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.example.generated.tables.pojos.Training> fetchRangeOfType(String lowerInclusive, String upperInclusive) {
        return fetchRange(Training.TRAINING.TYPE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>type IN (values)</code>
     */
    public List<com.example.generated.tables.pojos.Training> fetchByType(String... values) {
        return fetch(Training.TRAINING.TYPE, values);
    }

    /**
     * Fetch records that have <code>max_trainees BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.example.generated.tables.pojos.Training> fetchRangeOfMaxTrainees(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(Training.TRAINING.MAX_TRAINEES, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>max_trainees IN (values)</code>
     */
    public List<com.example.generated.tables.pojos.Training> fetchByMaxTrainees(Long... values) {
        return fetch(Training.TRAINING.MAX_TRAINEES, values);
    }

    /**
     * Fetch records that have <code>date_time BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.example.generated.tables.pojos.Training> fetchRangeOfDateTime(LocalDateTime lowerInclusive, LocalDateTime upperInclusive) {
        return fetchRange(Training.TRAINING.DATE_TIME, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>date_time IN (values)</code>
     */
    public List<com.example.generated.tables.pojos.Training> fetchByDateTime(LocalDateTime... values) {
        return fetch(Training.TRAINING.DATE_TIME, values);
    }

    /**
     * Fetch records that have <code>duration BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.example.generated.tables.pojos.Training> fetchRangeOfDuration(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(Training.TRAINING.DURATION, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>duration IN (values)</code>
     */
    public List<com.example.generated.tables.pojos.Training> fetchByDuration(Long... values) {
        return fetch(Training.TRAINING.DURATION, values);
    }
}
